plugins {
    id 'com.google.protobuf' version '0.8.8' apply false
    id 'com.palantir.docker' version '0.25.0' apply false
    id "de.undercouch.download" version "4.0.4" apply false
    id "com.jfrog.artifactory" version '4.15.1'
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    apply plugin: 'com.jfrog.artifactory'

    ext {
        sharedDir = file("${project.rootDir}/shared")
        vertxVersion = '3.8.5'
        vertxGrpcVersion = '1.25.0'
        junitJupiterEngineVersion = '5.4.0'

        cradleVersion = '1.4-SNAPSHOT'
        th2CommonVersion = '1.3.0'
        th2StoreCommonVersion = '1.3.0'
        th2ConnectivityVersion = '1.1-SNAPSHOT'
    }

    group = 'com.exactpro.th2'
    version = release_version

    sourceCompatibility = 1.11
    targetCompatibility = 1.11

    repositories {
        maven {
            name 'MavenLocal'
            url sharedDir
        }
        mavenCentral()
        maven {
            name 'Artifactory snapshot'
            url 'http://artifactory5.exp.exactpro.com/artifactory/libs-snapshot'
        }
        maven {
            name 'Artifactory release'
            url 'http://artifactory5.exp.exactpro.com/artifactory/libs-release'
        }

        configurations.all {
            resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
            resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
        }
    }

    jar {
        manifest {
            attributes('Created-By': System.getProperty('java.version') + ' (' + System.getProperty('java.vendor') + ')')
            attributes('Specification-Title': '')
            attributes('Specification-Vendor': 'Exactpro Systems LLC')
            attributes('Implementation-Title': "${project.name}")
            attributes('Implementation-Vendor': 'Exactpro Systems LLC')
            attributes('Implementation-Vendor-Id': 'com.exactpro')
            attributes('Implementation-Version': "${version}")
            attributes('Implementation-Version-Date': getDate())
        }
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
            }
        }

        repositories {
            maven {
                name = 'localRepo'
                url = sharedDir
            }
        }
    }

    artifactoryPublish.skip = false
}

apply plugin: 'application'
apply plugin: 'com.palantir.docker'

archivesBaseName = 'event-store'

dependencies {
    compile project(':grpc-event-store')

    api "io.vertx:vertx-grpc:${vertxVersion}"
    compile "com.exactpro.cradle:cradle-cassandra:${cradleVersion}"
    compile "com.exactpro.cradle:cradle-core:${cradleVersion}"
    compile "com.exactpro.th2:th2-common:${th2CommonVersion}"
    implementation "io.vertx:vertx-rx-java2:$vertxVersion"

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'th2-event-store'
        }
    }
}

application {
    mainClassName 'com.exactpro.th2.eventstore.EventStoreMain'
}

applicationName = archivesBaseName

distTar {
    archiveName "${archivesBaseName}.tar"
}

dockerPrepare {
    dependsOn distTar
}

docker {
    name docker_image_name
    tag 'local-version', docker_image_name

    copySpec.from(tarTree("$buildDir/distributions/${archivesBaseName}.tar"))
}

static def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMdd-HH:mm:ss.SSS')
    return formattedDate
}
