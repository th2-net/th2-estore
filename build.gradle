plugins {
    id 'com.google.protobuf' version '0.8.8' apply false
    id 'com.palantir.docker' version '0.25.0' apply false
    id "de.undercouch.download" version "4.0.4" apply false
    id "com.jfrog.artifactory" version '4.15.1'
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    apply plugin: 'com.jfrog.artifactory'

    ext {
        sharedDir = file("${project.rootDir}/shared")
        vertxVersion = '3.8.5'
        vertxGrpcVersion = '1.25.0'
        junitJupiterEngineVersion = '5.4.0'
    }

    group = 'com.exactpro.th2'
    version = release_version

    sourceCompatibility = 11
    targetCompatibility = 11

    repositories {
        maven {
            name 'MavenLocal'
            url sharedDir
        }
        mavenCentral()
        maven {
            name 'Artifactory snapshot'
            url 'http://artifactory5.exp.exactpro.com/artifactory/libs-snapshot'
        }
        maven {
            name 'Artifactory release'
            url 'http://artifactory5.exp.exactpro.com/artifactory/libs-release'
        }

        configurations.all {
            resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
            resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
        }
    }

    dependencies {
        api platform('com.exactpro.th2:th2-bom:1.5.1-TH2-883.81')
    }

    jar {
        manifest {
            attributes(
                    'Created-By':               "${System.getProperty('java.version')} (${System.getProperty('java.vendor')})",
                    'Specification-Title':      '',
                    'Specification-Vendor':     'Exactpro Systems LLC',
                    'Implementation-Title':     project.archivesBaseName,
                    'Implementation-Vendor':    'Exactpro Systems LLC',
                    'Implementation-Vendor-Id': 'com.exactpro',
                    'Implementation-Version':   project.version
            )
        }
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
            }
        }

        repositories {
            maven {
                name = 'localRepo'
                url = sharedDir
            }
        }
    }

    artifactory {
        publish {
            contextUrl = "${artifactory_url}"
            repository {
                repoKey = "${artifactory_deploy_repo_key}" // The Artifactory repository key to publish to
                username = "${artifactory_user}" // The publisher user name
                password = "${artifactory_password}" // The publisher password
            }
            defaults {
                // Reference to Gradle publications defined in the build script.
                // This is how we tell the Artifactory Plugin which artifacts should be
                // published to Artifactory.
                publications('mavenJava')
                publishArtifacts = true
                publishBuildInfo = true
                // Properties to be attached to the published artifacts.
                publishPom = true
            }
        }
    }
}

apply plugin: 'application'
apply plugin: 'com.palantir.docker'

dependencies {
    implementation project(':th2-grpc-event-store')

    implementation "com.exactpro.th2:th2-common"
    implementation "com.exactpro.th2:th2-store-common"
    implementation "com.exactpro.cradle:cradle-cassandra"
    implementation "com.exactpro.cradle:cradle-core"

    implementation "io.vertx:vertx-grpc:${vertxVersion}"
    implementation "io.vertx:vertx-rx-java2:$vertxVersion"

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

artifactoryPublish.skip = true

application {
    mainClassName 'com.exactpro.th2.eventstore.EventStoreMain'
}

applicationName = 'service'

distTar {
    archiveName "${applicationName}.tar"
}

dockerPrepare {
    dependsOn distTar
}

docker {
    name docker_image_name
    tag 'local-version', docker_image_name

    copySpec.from(tarTree("$buildDir/distributions/${applicationName}.tar"))
}
