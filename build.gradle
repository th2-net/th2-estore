plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '5.0.0'
    id 'com.palantir.docker' version '0.25.0'
}

ext {
    sharedDir = file("${project.rootDir}/shared")
    vertxVersion = '3.8.5'
    junitJupiterEngineVersion = '5.4.0'
}

group = 'com.exactpro.evolution.eventstore'
version = "${version_major}.${version_minor}.${version_maintenance}"

repositories {
    maven {
        name 'MavenLocal'
        url sharedDir
    }
    mavenCentral()
    maven {
        name 'Artifactory'
        url 'http://artifactory5.exp.exactpro.com/artifactory/libs-snapshot'
    }
}

application {
    mainClassName = 'com.exactpro.evolution.messagestore.DemoMessageStore'
    //mainClassName = 'io.vertx.core.Launcher' //TODO: Reuse in separated event storage
}

distTar {
    archiveName "${archivesBaseName}.tar"
}

dockerPrepare {
    dependsOn distTar
}

docker {
    name "${docker_image_repository}/${docke_image_name}:${version}"
    tag 'th2-version', "${docke_image_name}:${version}"
    tag 'th2-latest', "${docke_image_name}:latest"
    copySpec.from(tarTree("$buildDir/distributions/${archivesBaseName}.tar"))
}

sourceCompatibility = '1.8'

def mainVerticleName = 'com.exactpro.evolution.MainVerticle'
def watchForChange = 'src/**/*'
def doOnChange = './gradlew classes'

dependencies {
    compile "com.exactpro.cradle:cradle-cassandra:1.0-SNAPSHOT"
    compile "com.exactpro.cradle:cradle-core:1.0-SNAPSHOT"
    compile "com.exactpro.th2:grpc-api:0.1-SNAPSHOT"
    compile "com.exactpro.th2:th2-common:0.1-SNAPSHOT"
    implementation project(":proto")
//   implementation "com.exactpro.cradle:cradle-cassandra"
//   implementation "com.exactpro.cradle:cradle-core"
    implementation "io.vertx:vertx-rx-java2:$vertxVersion"
    implementation "io.vertx:vertx-rabbitmq-client:$vertxVersion"

//  implementation("com.exactpro.evolution.demo:rabbitmq-client") {
//    exclude group: "io.grpc", module: "grpc-netty"
//  }

    testImplementation "org.powermock:powermock-module-junit4:2.0.2"
    testImplementation "org.powermock:powermock-api-mockito:1.7.4"
    testImplementation group: 'org.mockito', name: 'mockito-all', version: '1.10.19'
    testImplementation "io.vertx:vertx-junit5:$vertxVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitJupiterEngineVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitJupiterEngineVersion"
}


shadowJar {
    classifier = 'fat'
    manifest {
        attributes 'Main-Verticle': mainVerticleName
    }
    mergeServiceFiles {
        include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events 'PASSED', 'FAILED', 'SKIPPED'
    }
}

run {
    args = ['run', mainVerticleName, "--redeploy=$watchForChange", "--launcher-class=$mainClassName", "--on-redeploy=$doOnChange"]
}
