apply plugin: "com.exactpro.th2.service-generator"
apply plugin: 'com.google.protobuf'
apply plugin: 'maven-publish'


buildscript {
    repositories {
        mavenCentral()
        maven {
            name 'Schema snapshot'
            url 'http://artifactory5.exp.exactpro.com/artifactory/th2-schema-snapshot-local'
        }
        maven {
            name 'Artifactory snapshot'
            url 'http://artifactory5.exp.exactpro.com/artifactory/libs-snapshot'
        }
        mavenLocal()
    }
    dependencies {
        classpath "com.exactpro.th2:service-generator:1.3.1-SNAPSHOT"
    }
}
ext {
    genDir = "${projectDir}/src/gen"
}

dependencies {
    api "io.vertx:vertx-grpc:${vertxVersion}"

    compile "com.exactpro.th2:th2-grpc-infra:${th2CommonVersion}"
    compile "javax.annotation:javax.annotation-api:1.3.2"

    compile "com.exactpro.th2:service-generator:1.3.1-SNAPSHOT"

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.2.0'
    }
    plugins {
        grpc {
            artifact = "io.vertx:protoc-gen-grpc-java:${vertxGrpcVersion}"
        }
    }
    generateProtoTasks.generatedFilesBaseDir = genDir
    generateProtoTasks {
        all()*.plugins {
            grpc
        }
    }
}

sourceSets {
    main {
        java {
            srcDirs 'src/main/java', 'src/gen/main/java', 'src/gen/main/grpc', 'src/gen/main/antlr'
        }
    }
}

compileJava.dependsOn.add('generateProto')
generateServices.dependsOn.add('generateProto')
compileJava.dependsOn.add('generateServices')

serviceGeneration {
    settings {
        protoDir = "./src/main/proto/th2"
        outDir = "./src/gen/main/antlr"
    }
}

task zipProtobuf (type: Zip) {
    classifier 'protobuf'

    from sourceSets.main.proto.srcDirs
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact source: zipProtobuf, extension: 'zip'
        }
    }
}

clean {
    delete genDir
}
